import express from "express";
import bodyParser from "body-parser";
import fetch from "node-fetch";

const app = express();
app.use(bodyParser.json());

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
const TEST_CLIENT_ID = 175888649; // –¢–≤–æ–π client_id –¥–ª—è —Ç–µ—Å—Ç–æ–≤
const USEDESK_API_TOKEN = '12ff4f2af60aee0fe6869cec6e2c8401df7980b7'; // –¢–≤–æ–π —Ç–æ–∫–µ–Ω
const OPERATOR_USER_ID = 293758; // –¢–≤–æ–π ID –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –≤ UseDesk

app.post("/webhook", async (req, res) => {
  console.log("üöÄ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç UseDesk:");
  console.log(JSON.stringify(req.body, null, 2));

  res.sendStatus(200); // –°—Ä–∞–∑—É –æ—Ç–≤–µ—á–∞–µ–º, —á—Ç–æ–±—ã UseDesk –Ω–µ –∂–¥–∞–ª

  const messageText = req.body.text;
  const clientId = req.body.client_id;
  const channelId = req.body.ticket?.channel_id || req.body.channel_id;
  const chatId = req.body.chat_id;
  const ticketId = req.body.ticket?.id;

  if (!messageText || !clientId) {
    console.log("‚ùó –ü—Ä–æ–ø—É—â–µ–Ω—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è (–Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ client_id)");
    return;
  }

  if (clientId !== TEST_CLIENT_ID) {
    console.log(`‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –¥—Ä—É–≥–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ (${clientId}), –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`);
    return;
  }

  try {
    const replyText = "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç–≤–µ—Ç —á–µ—Ä–µ–∑ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª! ü§ñ";

    if (chatId) {
      // –≠—Ç–æ –∂–∏–≤–æ–π —á–∞—Ç (WhatsApp, Webchat –∏ —Ç.–¥.)
      console.log("üí¨ –û–±–Ω–∞—Ä—É–∂–µ–Ω chat_id, —à–ª–µ–º –æ—Ç–≤–µ—Ç –≤ –ß–ê–¢");

      const response = await fetch("https://api.usedesk.ru/create/ticket", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          api_token: USEDESK_API_TOKEN,
          client_id: clientId,
          channel_id: channelId,
          from: "user",
          user_id: OPERATOR_USER_ID,
          type: "question",
          message: replyText
        })
      });

      const data = await response.json();
      console.log(`‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –ß–ê–¢ WhatsApp –∫–ª–∏–µ–Ω—Ç—É ${clientId}:`, data);

    } else if (ticketId) {
      // –≠—Ç–æ –æ–±—ã—á–Ω—ã–π —Ç–∏–∫–µ—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä email)
      console.log("üì© –û–±–Ω–∞—Ä—É–∂–µ–Ω ticket_id, —à–ª–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ —Ç–∏–∫–µ—Ç");

      const response = await fetch("https://api.usedesk.ru/create/comment", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          api_token: USEDESK_API_TOKEN,
          ticket_id: ticketId,
          message: replyText
        })
      });

      const data = await response.json();
      console.log(`‚úÖ –û—Ç–≤–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –¢–ò–ö–ï–¢ ${ticketId}:`, data);

    } else {
      console.log("‚ö†Ô∏è –ù–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –Ω–∏ chat_id, –Ω–∏ ticket_id ‚Äî –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º");
    }

  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞:", error.message);
  }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log("‚úÖ –í–µ–±—Ö—É–∫ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É", PORT));
